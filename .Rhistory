meet_kmc_thresh  = sum(kmc_thresh[kmc.denom>=denom_limit], na.rm = T),
meet_photo_thresh  = sum(photo_thresh[phototherapy.denom>=denom_limit], na.rm = T),
meet_nothyp_thresh  = sum(nothyp_thresh[hypothermia.denom>=denom_limit], na.rm = T),
meet_pulse_thresh = sum(pulse_threshold[admissions>=denom_limit], na.rm = T),
###No facilities with n < 10
cpap_less_n = sum(cpap.combo.denom <denom_limit | is.na(cpap.combo.denom)),
kmc_less_n = sum(kmc.denom <denom_limit | is.na(kmc.denom)),
photo_less_n = sum(phototherapy.denom <denom_limit | is.na(phototherapy.denom)),
nothypoth_less_n = sum(hypothermia.denom <denom_limit | is.na(hypothermia.denom)),
pulse_less_n = sum(admissions <denom_limit | is.na(admissions)),
###Total facilities per country
total_facilities = n(),
###Effective number of facilities per intervention
cpap_eff_n = total_facilities, #- cpap_less_n,
kmc_eff_n = total_facilities, #- kmc_less_n,
photo_eff_n = total_facilities, #- photo_less_n,
nothypoth_eff_n = total_facilities, #- nothypoth_less_n,
pulse_eff_n = total_facilities, #- pulse_less_n,
####Proportion of facilities meeting thresholds
cpap_facil_prop = paste0(round(100*(meet_cpap_thresh/cpap_eff_n)),'% (',meet_cpap_thresh,'/',cpap_eff_n,')'),
kmc_facil_prop = paste0(round(100*(meet_kmc_thresh/kmc_eff_n)),'% (',meet_kmc_thresh,'/',kmc_eff_n,')'),
photo_facil_prop = paste0(round(100*(meet_photo_thresh/photo_eff_n)),'% (',meet_photo_thresh,'/',photo_eff_n,')'),
nothyp_facil_prop = paste0(round(100*(meet_nothyp_thresh/nothypoth_eff_n)),'% (',meet_nothyp_thresh,'/',nothypoth_eff_n,')'),
pulse_facil_prop = paste0(round(100*(meet_pulse_thresh/pulse_eff_n)),'% (',meet_pulse_thresh,'/',pulse_eff_n,')'))
if (strat_var =='')
{
result_tab = result_tab %>% dplyr::select(cpap_facil_prop, kmc_facil_prop, photo_facil_prop, nothyp_facil_prop, pulse_facil_prop) %>%
mutate(`eval(parse(text = strat_var))` = 'Overall')
} else {
result_tab = result_tab %>% dplyr::select(`eval(parse(text = strat_var))`,cpap_facil_prop, kmc_facil_prop, photo_facil_prop, nothyp_facil_prop, pulse_facil_prop)
}
return(result_tab)
}
table_facilities_meeting = facilities_meeting_thresholds() %>% full_join(facilities_meeting_thresholds(''))
table_facilities_meeting$country_abb = c('KE','MW','NG','TZ','')
########Neonatal level proportions
n_perc_neonates = country_coverage_est %>%
dplyr::select(country,admissions, glucose, pulseox, temp,
cpap.combo.denom, cpap.combo,
kmc.denom, kmc,
hypothermia.denom, hyp_on_adm,
phototherapy.denom,phototherapy) %>%
mutate(glucose = paste0(round(glucose*100),'%'),
pulseox = paste0(round(pulseox*100),'%'),
temp = paste0(round(temp*100),'%'),
cpap.combo = paste0(round(cpap.combo*100),'%'),
kmc = paste0(round(kmc*100),'%'),
hyp_on_adm = paste0(round(hyp_on_adm*100),'%'),
phototherapy = paste0(round(phototherapy*100),'%'))
n_perc_neonates_overall = overall_coverage_est %>%
dplyr::select(admissions, glucose, pulseox, temp,
cpap.combo.denom, cpap.combo,
kmc.denom, kmc,
hypothermia.denom, hyp_on_adm,
phototherapy.denom,phototherapy) %>%
mutate(glucose = paste0(round(glucose*100),'%'),
pulseox = paste0(round(pulseox*100),'%'),
temp = paste0(round(temp*100),'%'),
cpap.combo = paste0(round(cpap.combo*100),'%'),
kmc = paste0(round(kmc*100),'%'),
hyp_on_adm = paste0(round(hyp_on_adm*100),'%'),
phototherapy = paste0(round(phototherapy*100),'%')) %>%
mutate(country = 'Overall')
###
final_n_perc_neonates = n_perc_neonates %>% full_join(n_perc_neonates_overall)
#
country_level_tab = final_n_perc_neonates %>% full_join(table_facilities_meeting %>% rename(country=`eval(parse(text = strat_var))`)) %>%
dplyr::select(country,admissions, glucose, temp, pulseox,pulse_facil_prop,
cpap.combo.denom, cpap.combo, cpap_facil_prop,
kmc.denom, kmc,kmc_facil_prop,kmc_facil_prop,
hypothermia.denom, hyp_on_adm,nothyp_facil_prop,
phototherapy.denom,phototherapy,photo_facil_prop)
####
#final_country_level_tab$country_abb = c('','KE','MW','NG','TZ','')
title2 =c('Country','Admissions','Glucose','Temp','Pulseox',
'#Facilities \nalready met \n2025 goal \nfor Pulseox',
'Eligible Neonates','Coverage (%)','#Facilities \nalready met \n2025 goal',
'Eligible Neonates','Coverage (%)','#Facilities \nalready met \n2025 goal',
'Eligible Neonates','Coverage (%)','#Facilities \nalready met \n2025 goal',
'Eligible Neonates','Coverage (%)','#Facilities \nalready met \n2025 goal')
#
title1 =c('','','','%  of neonates with \nvitals measured on admission','',
'','','CPAP','','','KMC','','','Not Hypothermic','','','Phototherapy','')
###
final_country_level_tab = rbind(title2,country_level_tab)
colnames(final_country_level_tab)=title1
#######################################################
#########################################################
comb_facility_coverage_est = facility_coverage_est  %>% mutate(in_facid = as.numeric(in_facid))%>%
left_join(facility_level_thresholds)%>% left_join(reporting_period%>% mutate(in_facid = as.numeric(in_facid)))%>%
mutate(cpap_reach25 = ifelse(cpap.combo>= CPAP_threshold,'Yes','No'),
kmc_reach25  = ifelse(kmc >= KMC_threshold,'Yes','No'),
hyp_reach25  = ifelse(hyp_on_adm>= normothermia_at_adm_threshold,'Yes','No'),
pt_reach25 = ifelse(phototherapy>=photo_threshold,'Yes','No'),
glucose = paste0(round(glucose*100),'%'),
temp = paste0(round(temp*100),'%'),
pulseox = paste0(round(pulseox*100),'%'),
cpap.combo = paste0(round(cpap.combo*100),'%'),
CPAP_threshold = paste0(round(CPAP_threshold*100),'%'),
kmc = paste0(round(kmc*100),'%'),
KMC_threshold = paste0(round(KMC_threshold*100),'%'),
hyp_on_adm = paste0(round(hyp_on_adm*100),'%'),
normothermia_at_adm_threshold = paste0(round(normothermia_at_adm_threshold*100),'%'),
phototherapy = paste0(round(phototherapy*100),'%'),
photo_threshold = paste0(round(photo_threshold*100),'%'))%>%
dplyr::select(country,in_facid,admissions,glucose,temp,pulseox,
cpap.combo.denom,cpap.combo,CPAP_threshold,cpap_reach25,cpap_period,
kmc.denom,kmc, KMC_threshold, kmc_reach25,kmc_period,
hypothermia.denom,hyp_on_adm,normothermia_at_adm_threshold,hyp_reach25,hyp_period,
phototherapy.denom,phototherapy,photo_threshold,pt_reach25,pt_period)
fact_title2 = c('Country','Facility ID','Admissions',
'glucose',	'pulseox',	'temp',
'Eligible',	'Coverage (%)',	'2025 goal',	'Reached 2025 goal','Data period',
'Eligible',	'Coverage (%)',	'2025 goal',	'Reached 2025 goal','Data period',
'Eligible',	'Coverage (%)',	'2025 goal',	'Reached 2025 goal','Data period',
'Eligible',	'Coverage (%)',	'2025 goal',	'Reached 2025 goal','Data period')
#
fact_title1 = c('','','',
'',	'%  of neonates with vitals measured on admission',	'',
'',	'CPAP',	'',	'','',
'',	'KMC',	'',	'','',
'',	'Not Hypothermic',	'',	'','',
'',	'Phototherapy',	'','','')
###
final_comb_facility_coverage_est = rbind(fact_title2,comb_facility_coverage_est%>%as.data.frame())
colnames(final_comb_facility_coverage_est)=fact_title1
###Outputs
write.xlsx(final_country_level_tab, file = 'final_country_level_tab_2024Q3.xlsx')
write.xlsx(final_comb_facility_coverage_est, file = 'final_comb_facility_coverage_est_2024Q3.xlsx')
########Further edits to match the reporting format##################
rev_country_level = final_country_level_tab[-1,]
rev_country_level$country_abb = c('KE','MW','NG','TZ','')
colnames(rev_country_level) = paste0('colname', 1:ncol(rev_country_level))
###
rev_country_level = rev_country_level %>% mutate(colname6 = ifelse(colname19!='',paste0(colname19,': ',colname6),gsub('\\(','\n(',colname6)),
colname9 = ifelse(colname19!='',paste0(colname19,': ',colname9),gsub('\\(','\n(',colname9)),
colname12 = ifelse(colname19!='',paste0(colname19,': ',colname12),gsub('\\(','\n(',colname12)),
colname15 = ifelse(colname19!='',paste0(colname19,': ',colname15),gsub('\\(','\n(',colname15)),
colname18 = ifelse(colname19!='',paste0(colname19,': ',colname18),gsub('\\(','\n(',colname18)),
#######
colname5 = ifelse(colname19!='',paste0(colname19,': ',colname5),gsub('\\(','\n(',colname5)),
colname8 = ifelse(colname19!='',paste0(colname19,': ',colname8),gsub('\\(','\n(',colname8)),
colname11 = ifelse(colname19!='',paste0(colname19,': ',colname11),gsub('\\(','\n(',colname11)),
colname14 = ifelse(colname19!='',paste0(colname19,': ',colname14),gsub('\\(','\n(',colname14)),
colname17 = ifelse(colname19!='',paste0(colname19,': ',colname17),gsub('\\(','\n(',colname17)))
####country level estimates
pre_final_results = rev_country_level[-5,] %>% dplyr::select(colname5,colname6,colname8,colname9,colname11,colname12,colname14,colname15,colname17,colname18)%>%
rowwise %>% mutate(colname5 = paste0(colname5, collapse = '\n'),colname6 = paste0(colname6, collapse = '\n'),
colname8 = paste0(colname8, collapse = '\n'),colname9 = paste0(colname9, collapse = '\n'),
colname11 = paste0(colname11, collapse = '\n'),colname12 = paste0(colname12, collapse = '\n'),
colname14 = paste0(colname14, collapse = '\n'),colname15 = paste0(colname15, collapse = '\n'),
colname17 = paste0(colname17, collapse = '\n'),colname18 = paste0(colname18, collapse = '\n'))%>%
full_join(rev_country_level[5,]%>% dplyr::select(colname5,colname6,colname8,colname9,colname11,colname12,colname14,colname15,colname17,colname18))
###pulse 5-6; CPAP - 8,9; KMC - 11,12; Not hypothermia 14,15; Jaundice 17,18
final_results = with(pre_final_results,c(paste0(colname9[-5], collapse = '\n'),colname9[5],paste0(colname8[-5], collapse = '\n'),colname8[5],
paste0(colname12[-5], collapse = '\n'),colname12[5],paste0(colname11[-5], collapse = '\n'),colname11[5],
paste0(colname15[-5], collapse = '\n'),colname15[5],paste0(colname14[-5], collapse = '\n'),colname14[5],
paste0(colname18[-5], collapse = '\n'),colname18[5],paste0(colname17[-5], collapse = '\n'),colname17[5],
paste0(colname6[-5], collapse = '\n'),colname6[5], paste0(colname5[-5], collapse = '\n'),colname5[5]))%>% as.data.frame()
write.xlsx(final_results, file = 'final_results.xlsx')
rm(list = ls())
setwd("~/Documents/Transferred files/Data/data part 4/extras/Ohuma protocol/FCC Indicator reporting")
###
req_packages = c('foreign','readstata13','dplyr','lubridate','stringr','patchwork','data.table','tidyverse','funnelR',
'openxlsx','tidyquant','parallel','ggplot2','ggpubr','boot','rstanarm')
####
eval(parse(text = paste0('library(',req_packages,')', sep='\n')))
###
data = fread('overall_nid_for_nestit-8.csv') %>% as_tibble() %>%
mutate(date = sub("\\d{2}$", "01", in_doa), date=as.Date(date,'%Y-%m-%d'),
quarter = as.yearqtr(date), year_month = format(date,'%Y-%m'),year = format(date,'%Y'),
quarter = ifelse(quarter=='2019 Q1'|quarter=='2019 Q2'|quarter=='2019 Q3', NA, quarter),
not_hypotherm_adm = case_when(in_tmp_adm_cel >= 36.5 & in_tmp_adm_doc == 1 ~ 1,
in_tmp_adm_cel < 36.5 & in_tmp_adm_doc == 1 ~ 0,
in_tmp_adm_doc == 0 ~ NA),
not_hypotherm_dur = case_when(in_tmp_lo_cel >= 36.5 & in_tmp_lo_doc == 1 ~ 1,
in_tmp_lo_cel < 36.5  & in_tmp_lo_doc == 1 ~ 0,
in_tmp_lo_doc == 0 ~ NA)) %>%
dplyr::filter(in_facid!=137 & in_facid!=138 & in_facid!=412 & in_facid!=413 & in_facid!=414
& (date >=as.Date('2022-01-01'))) %>% # & date <=as.Date('2023-12-31')
mutate_all(~ if_else(. %in% c(-1, -3), NA, .))
####Examining monthly data
monthly_admissions = data %>% mutate(month = gsub('2022-|2023-|2024-','',year_month)) %>%
group_by(in_facid,year,month) %>% summarise(n()) %>%
pivot_wider(names_from = 'year',values_from = `n()`)
#
monthly_admissions[is.na(monthly_admissions)]=0
####
####Clinical Indicators
overall_coverage_function = function(strat_by = c('country','year'), datum = reporting_data)
{
estimated_coverage = eval(parse(text = paste0('datum %>% group_by(',paste0(strat_by, collapse = ','),',.drop=FALSE)'))) %>%
summarise(admissions = n(),
# define vital signs indicators
glucose = sum(in_glu_adm_doc == 1, na.rm = TRUE)/admissions,
pulseox = sum(in_o2_satur_adm_doc == 1, na.rm = TRUE)/admissions,
temp_adm_doc = sum(in_tmp_adm_doc == 1 , na.rm = TRUE),
temp = temp_adm_doc/admissions,
# Combined CPAP converage indicator
cpap.combo.denom = sum(bwcat_new == "1000-1499" |
(bwcat_new == "1500-1999" & respdist2 == 1 & loO2 == 1)|
(bwcat_new == "1500-1999" & respdist2 == 1 & country == "Kenya"),
na.rm = T),
cpap.combo.numer = sum(in_cp_admin == 1 & (bwcat_new == "1000-1499" |
(bwcat_new == "1500-1999" & respdist2 == 1 & loO2 == 1)|
(bwcat_new == "1500-1999" & in_rds == 1 & country == "Kenya")),
na.rm = T),
cpap.combo = cpap.combo.numer / cpap.combo.denom,
# KMC coverage indicator
kmc.denom = sum(bwcat_new == "1000-1499" | bwcat_new == "1500-1999",na.rm = T),
kmc.numer = sum(in_kmc_admin == 1 & (bwcat_new == "1000-1499" | bwcat_new == "1500-1999"),na.rm = T),
kmc = kmc.numer / kmc.denom,
# Not-hypothermic indicators (used to be hypothermic, keeping same variable names, but showing % NOT hypothermic)
temp_doc_dur_stay = sum(in_tmp_lo_doc == 1, na.rm = TRUE),
hyp.anytime.numer = sum(not_hypotherm_dur == 1, na.rm = TRUE),
hyp_dur_stay = hyp.anytime.numer/temp_doc_dur_stay,
hypothermia.numer = sum(not_hypotherm_adm == 1, na.rm = TRUE),
temp_adm_doc = sum(in_tmp_adm_doc == 1 , na.rm = TRUE),
hypothermia.denom = temp_adm_doc,
hyp_on_adm = hypothermia.numer/hypothermia.denom,
#Jaundice & phototherapy indicators
phototherapy.numer = sum(in_pt_admin == 1 & requires_phototherapy == 1, na.rm = TRUE),
phototherapy.denom = sum(requires_phototherapy == 1, na.rm = TRUE),
phototherapy = phototherapy.numer/phototherapy.denom
)
return(estimated_coverage)
}
vital_coverage_function = function(strat_by = c('country','year'), datum = reporting_data)
{
estimated_coverage = eval(parse(text = paste0('datum %>% group_by(',paste0(strat_by, collapse = ','),',.drop=FALSE)'))) %>%
summarise(admissions = n(),
# define vital signs indicators
glucose = sum(in_glu_adm_doc == 1, na.rm = TRUE)/admissions,
pulseox = sum(in_o2_satur_adm_doc == 1, na.rm = TRUE)/admissions,
temp_adm_doc = sum(in_tmp_adm_doc == 1 , na.rm = TRUE),
temp = temp_adm_doc/admissions)
return(estimated_coverage %>% dplyr::select(-temp_adm_doc))
}
####CPAP
cpap_coverage_function = function(strat_by = c('country','year'), datum = cpap_data)
{
estimated_coverage = eval(parse(text = paste0('datum %>% group_by(',paste0(strat_by, collapse = ','),',.drop=FALSE)'))) %>%
summarise(
# Combined CPAP converage indicator
cpap.combo.denom = sum(bwcat_new == "1000-1499" |
(bwcat_new == "1500-1999" & respdist2 == 1 & loO2 == 1)|
(bwcat_new == "1500-1999" & in_rds == 1 & country == "Kenya"),
na.rm = T),
cpap.combo.numer = sum(in_cp_admin == 1 & (bwcat_new == "1000-1499" |
(bwcat_new == "1500-1999" & respdist2 == 1 & loO2 == 1)|
(bwcat_new == "1500-1999" & in_rds == 1 & country == "Kenya")),
na.rm = T),
cpap.combo = cpap.combo.numer / cpap.combo.denom)
return(estimated_coverage)
}
##KMC
kmc_coverage_function = function(strat_by = c('country','year'), datum = kmc_data)
{
estimated_coverage = eval(parse(text = paste0('datum %>% group_by(',paste0(strat_by, collapse = ','),',.drop=FALSE)'))) %>%
summarise(
# KMC coverage indicator
kmc.denom = sum(bwcat_new == "1000-1499" | bwcat_new == "1500-1999",na.rm = T),
kmc.numer = sum(in_kmc_admin == 1 & (bwcat_new == "1000-1499" | bwcat_new == "1500-1999"),na.rm = T),
kmc = kmc.numer / kmc.denom)
return(estimated_coverage)
}
###Not Hypoth
nothyp_coverage_function = function(strat_by = c('country','year'), datum = hypo_data)
{
estimated_coverage = eval(parse(text = paste0('datum %>% group_by(',paste0(strat_by, collapse = ','),',.drop=FALSE)'))) %>%
summarise(
temp_doc_dur_stay = sum(in_tmp_lo_doc == 1, na.rm = TRUE),
temp_adm_doc = sum(in_tmp_adm_doc == 1 , na.rm = TRUE),
hyp.anytime.numer = sum(not_hypotherm_dur == 1, na.rm = TRUE),
hyp_dur_stay = hyp.anytime.numer/temp_doc_dur_stay,
hypothermia.numer = sum(not_hypotherm_adm == 1, na.rm = TRUE),
hypothermia.denom = temp_adm_doc,
hyp_on_adm = hypothermia.numer/hypothermia.denom
)
return(estimated_coverage)
}
###Jaundice
jaundice_coverage_function = function(strat_by = c('country','year'), datum = pt_data)
{
estimated_coverage = eval(parse(text = paste0('datum %>% group_by(',paste0(strat_by, collapse = ','),',.drop=FALSE)'))) %>%
summarise(
#Jaundice & phototherapy indicators
phototherapy.numer = sum(in_pt_admin == 1 & requires_phototherapy == 1, na.rm = TRUE),
phototherapy.denom = sum(requires_phototherapy == 1, na.rm = TRUE),
phototherapy = phototherapy.numer/phototherapy.denom
)
return(estimated_coverage)
}
######################################################################################
######################################################################################
denom_limit = 20
six_month_report = "in_doa>=as.Date('2024-06-01') & in_doa<=as.Date('2024-11-30')"
year_report = "in_doa>=as.Date('2023-12-01') & in_doa<=as.Date('2024-11-30')"
reporting_data = data %>% dplyr::filter(in_doa>=as.Date('2024-06-01') & in_doa<=as.Date('2024-11-30'))
###
facility_denom_est = overall_coverage_function(strat_by = c('country','in_facid'), datum = reporting_data)%>%
mutate(cpap_limit = cpap.combo.denom < denom_limit, kmc_limit = kmc.denom < denom_limit,
hyp_limit = hypothermia.denom < denom_limit, pt_limit = phototherapy.denom < denom_limit)%>%
dplyr::select(in_facid,cpap_limit,kmc_limit,hyp_limit,pt_limit) %>%
mutate(cpap_period = ifelse(cpap_limit,year_report,six_month_report),
kmc_period = ifelse(kmc_limit,year_report,six_month_report),
hyp_period = ifelse(hyp_limit,year_report,six_month_report),
pt_period = ifelse(pt_limit,year_report,six_month_report))
reporting_period = facility_denom_est%>% dplyr::select(in_facid,cpap_limit,kmc_limit,hyp_limit,pt_limit)%>%
mutate(cpap_period = ifelse(cpap_limit,'12 months','6 months'),
kmc_period = ifelse(kmc_limit,'12 months','6 months'),
hyp_period = ifelse(hyp_limit,'12 months','6 months'),
pt_period = ifelse(pt_limit,'12 months','6 months'))%>%
dplyr::select(in_facid,cpap_period, kmc_period, hyp_period, pt_period)
#####datasets for analysis
eval(parse(text=paste0('cpap_data = data %>% dplyr::filter(',paste0('(in_facid ==',facility_denom_est$in_facid, ' & ',facility_denom_est$cpap_period,')', collapse = '|'),')')))
eval(parse(text=paste0('kmc_data = data %>% dplyr::filter(',paste0('(in_facid ==',facility_denom_est$in_facid, ' & ',facility_denom_est$kmc_period,')', collapse = '|'),')')))
eval(parse(text=paste0('hypo_data = data %>% dplyr::filter(',paste0('(in_facid ==',facility_denom_est$in_facid, ' & ',facility_denom_est$hyp_period,')', collapse = '|'),')')))
eval(parse(text=paste0('pt_data = data %>% dplyr::filter(',paste0('(in_facid ==',facility_denom_est$in_facid, ' & ',facility_denom_est$pt_period,')', collapse = '|'),')')))
####Calling the coverage function
country_coverage_est = vital_coverage_function(strat_by = c('country'), datum = reporting_data)%>%
full_join(cpap_coverage_function(strat_by = c('country'), datum = cpap_data))%>%
full_join(kmc_coverage_function(strat_by = c('country'), datum = kmc_data))%>%
full_join(nothyp_coverage_function(strat_by = c('country'), datum = hypo_data))%>%
full_join(jaundice_coverage_function(strat_by = c('country'), datum = pt_data))
overall_coverage_est = vital_coverage_function(strat_by = c(''), datum = reporting_data)%>%
cross_join(cpap_coverage_function(strat_by = c(''), datum = cpap_data))%>%
cross_join(kmc_coverage_function(strat_by = c(''), datum = kmc_data))%>%
cross_join(nothyp_coverage_function(strat_by = c(''), datum = hypo_data))%>%
cross_join(jaundice_coverage_function(strat_by = c(''), datum = pt_data))
facility_coverage_est = vital_coverage_function(strat_by = c('country','in_facid'), datum = reporting_data)%>%
full_join(cpap_coverage_function(strat_by = c('country','in_facid'), datum = cpap_data))%>%
full_join(kmc_coverage_function(strat_by = c('country','in_facid'), datum = kmc_data))%>%
full_join(nothyp_coverage_function(strat_by = c('country','in_facid'), datum = hypo_data))%>%
full_join(jaundice_coverage_function(strat_by = c('country','in_facid'), datum = pt_data))
###Reading in intervention thresholds
facility_level_thresholds = read.xlsx('Intervention thresholds revised.xlsx',1)
combined_data_thresholds = facility_coverage_est %>%
left_join(facility_level_thresholds %>% mutate(in_facid = as.numeric(in_facid)))
###Examining facilities meeting thresholds
facilities_meeting_thresholds = function (strat_var = 'country')
{
result_tab = combined_data_thresholds%>%
mutate(cpap_thresh = ifelse(cpap.combo>=CPAP_threshold,1,0),
kmc_thresh = ifelse(kmc>=KMC_threshold,1,0),
photo_thresh = ifelse(phototherapy>=photo_threshold,1,0),
nothyp_thresh = ifelse(hyp_on_adm>=normothermia_at_adm_threshold,1,0),
pulse_threshold = ifelse(pulseox>=.9,1,0))%>%
group_by(eval(parse(text = strat_var)))%>%
summarise(
###Summing facilities meeting thresholds
meet_cpap_thresh = sum(cpap_thresh[cpap.combo.denom>=denom_limit], na.rm = T),
meet_kmc_thresh  = sum(kmc_thresh[kmc.denom>=denom_limit], na.rm = T),
meet_photo_thresh  = sum(photo_thresh[phototherapy.denom>=denom_limit], na.rm = T),
meet_nothyp_thresh  = sum(nothyp_thresh[hypothermia.denom>=denom_limit], na.rm = T),
meet_pulse_thresh = sum(pulse_threshold[admissions>=denom_limit], na.rm = T),
###No facilities with n < 10
cpap_less_n = sum(cpap.combo.denom <denom_limit | is.na(cpap.combo.denom)),
kmc_less_n = sum(kmc.denom <denom_limit | is.na(kmc.denom)),
photo_less_n = sum(phototherapy.denom <denom_limit | is.na(phototherapy.denom)),
nothypoth_less_n = sum(hypothermia.denom <denom_limit | is.na(hypothermia.denom)),
pulse_less_n = sum(admissions <denom_limit | is.na(admissions)),
###Total facilities per country
total_facilities = n(),
###Effective number of facilities per intervention
cpap_eff_n = total_facilities, #- cpap_less_n,
kmc_eff_n = total_facilities, #- kmc_less_n,
photo_eff_n = total_facilities, #- photo_less_n,
nothypoth_eff_n = total_facilities, #- nothypoth_less_n,
pulse_eff_n = total_facilities, #- pulse_less_n,
####Proportion of facilities meeting thresholds
cpap_facil_prop = paste0(round(100*(meet_cpap_thresh/cpap_eff_n)),'% (',meet_cpap_thresh,'/',cpap_eff_n,')'),
kmc_facil_prop = paste0(round(100*(meet_kmc_thresh/kmc_eff_n)),'% (',meet_kmc_thresh,'/',kmc_eff_n,')'),
photo_facil_prop = paste0(round(100*(meet_photo_thresh/photo_eff_n)),'% (',meet_photo_thresh,'/',photo_eff_n,')'),
nothyp_facil_prop = paste0(round(100*(meet_nothyp_thresh/nothypoth_eff_n)),'% (',meet_nothyp_thresh,'/',nothypoth_eff_n,')'),
pulse_facil_prop = paste0(round(100*(meet_pulse_thresh/pulse_eff_n)),'% (',meet_pulse_thresh,'/',pulse_eff_n,')'))
if (strat_var =='')
{
result_tab = result_tab %>% dplyr::select(cpap_facil_prop, kmc_facil_prop, photo_facil_prop, nothyp_facil_prop, pulse_facil_prop) %>%
mutate(`eval(parse(text = strat_var))` = 'Overall')
} else {
result_tab = result_tab %>% dplyr::select(`eval(parse(text = strat_var))`,cpap_facil_prop, kmc_facil_prop, photo_facil_prop, nothyp_facil_prop, pulse_facil_prop)
}
return(result_tab)
}
table_facilities_meeting = facilities_meeting_thresholds() %>% full_join(facilities_meeting_thresholds(''))
table_facilities_meeting$country_abb = c('KE','MW','NG','TZ','')
########Neonatal level proportions
n_perc_neonates = country_coverage_est %>%
dplyr::select(country,admissions, glucose, pulseox, temp,
cpap.combo.denom, cpap.combo,
kmc.denom, kmc,
hypothermia.denom, hyp_on_adm,
phototherapy.denom,phototherapy) %>%
mutate(glucose = paste0(round(glucose*100),'%'),
pulseox = paste0(round(pulseox*100),'%'),
temp = paste0(round(temp*100),'%'),
cpap.combo = paste0(round(cpap.combo*100),'%'),
kmc = paste0(round(kmc*100),'%'),
hyp_on_adm = paste0(round(hyp_on_adm*100),'%'),
phototherapy = paste0(round(phototherapy*100),'%'))
n_perc_neonates_overall = overall_coverage_est %>%
dplyr::select(admissions, glucose, pulseox, temp,
cpap.combo.denom, cpap.combo,
kmc.denom, kmc,
hypothermia.denom, hyp_on_adm,
phototherapy.denom,phototherapy) %>%
mutate(glucose = paste0(round(glucose*100),'%'),
pulseox = paste0(round(pulseox*100),'%'),
temp = paste0(round(temp*100),'%'),
cpap.combo = paste0(round(cpap.combo*100),'%'),
kmc = paste0(round(kmc*100),'%'),
hyp_on_adm = paste0(round(hyp_on_adm*100),'%'),
phototherapy = paste0(round(phototherapy*100),'%')) %>%
mutate(country = 'Overall')
###
final_n_perc_neonates = n_perc_neonates %>% full_join(n_perc_neonates_overall)
#
country_level_tab = final_n_perc_neonates %>% full_join(table_facilities_meeting %>% rename(country=`eval(parse(text = strat_var))`)) %>%
dplyr::select(country,admissions, glucose, temp, pulseox,pulse_facil_prop,
cpap.combo.denom, cpap.combo, cpap_facil_prop,
kmc.denom, kmc,kmc_facil_prop,kmc_facil_prop,
hypothermia.denom, hyp_on_adm,nothyp_facil_prop,
phototherapy.denom,phototherapy,photo_facil_prop)
####
#final_country_level_tab$country_abb = c('','KE','MW','NG','TZ','')
title2 =c('Country','Admissions','Glucose','Temp','Pulseox',
'#Facilities \nalready met \n2025 goal \nfor Pulseox',
'Eligible Neonates','Coverage (%)','#Facilities \nalready met \n2025 goal',
'Eligible Neonates','Coverage (%)','#Facilities \nalready met \n2025 goal',
'Eligible Neonates','Coverage (%)','#Facilities \nalready met \n2025 goal',
'Eligible Neonates','Coverage (%)','#Facilities \nalready met \n2025 goal')
#
title1 =c('','','','%  of neonates with \nvitals measured on admission','',
'','','CPAP','','','KMC','','','Not Hypothermic','','','Phototherapy','')
###
final_country_level_tab = rbind(title2,country_level_tab)
colnames(final_country_level_tab)=title1
#######################################################
#########################################################
comb_facility_coverage_est = facility_coverage_est  %>% mutate(in_facid = as.numeric(in_facid))%>%
left_join(facility_level_thresholds)%>% left_join(reporting_period%>% mutate(in_facid = as.numeric(in_facid)))%>%
mutate(cpap_reach25 = ifelse(cpap.combo>= CPAP_threshold,'Yes','No'),
kmc_reach25  = ifelse(kmc >= KMC_threshold,'Yes','No'),
hyp_reach25  = ifelse(hyp_on_adm>= normothermia_at_adm_threshold,'Yes','No'),
pt_reach25 = ifelse(phototherapy>=photo_threshold,'Yes','No'),
glucose = paste0(round(glucose*100),'%'),
temp = paste0(round(temp*100),'%'),
pulseox = paste0(round(pulseox*100),'%'),
cpap.combo = paste0(round(cpap.combo*100),'%'),
CPAP_threshold = paste0(round(CPAP_threshold*100),'%'),
kmc = paste0(round(kmc*100),'%'),
KMC_threshold = paste0(round(KMC_threshold*100),'%'),
hyp_on_adm = paste0(round(hyp_on_adm*100),'%'),
normothermia_at_adm_threshold = paste0(round(normothermia_at_adm_threshold*100),'%'),
phototherapy = paste0(round(phototherapy*100),'%'),
photo_threshold = paste0(round(photo_threshold*100),'%'))%>%
dplyr::select(country,in_facid,admissions,glucose,temp,pulseox,
cpap.combo.denom,cpap.combo,CPAP_threshold,cpap_reach25,cpap_period,
kmc.denom,kmc, KMC_threshold, kmc_reach25,kmc_period,
hypothermia.denom,hyp_on_adm,normothermia_at_adm_threshold,hyp_reach25,hyp_period,
phototherapy.denom,phototherapy,photo_threshold,pt_reach25,pt_period)
fact_title2 = c('Country','Facility ID','Admissions',
'glucose',	'pulseox',	'temp',
'Eligible',	'Coverage (%)',	'2025 goal',	'Reached 2025 goal','Data period',
'Eligible',	'Coverage (%)',	'2025 goal',	'Reached 2025 goal','Data period',
'Eligible',	'Coverage (%)',	'2025 goal',	'Reached 2025 goal','Data period',
'Eligible',	'Coverage (%)',	'2025 goal',	'Reached 2025 goal','Data period')
#
fact_title1 = c('','','',
'',	'%  of neonates with vitals measured on admission',	'',
'',	'CPAP',	'',	'','',
'',	'KMC',	'',	'','',
'',	'Not Hypothermic',	'',	'','',
'',	'Phototherapy',	'','','')
###
final_comb_facility_coverage_est = rbind(fact_title2,comb_facility_coverage_est%>%as.data.frame())
colnames(final_comb_facility_coverage_est)=fact_title1
###Outputs
write.xlsx(final_country_level_tab, file = 'final_country_level_tab_2024Q3.xlsx')
write.xlsx(final_comb_facility_coverage_est, file = 'final_comb_facility_coverage_est_2024Q3.xlsx')
########Further edits to match the reporting format##################
rev_country_level = final_country_level_tab[-1,]
rev_country_level$country_abb = c('KE','MW','NG','TZ','')
colnames(rev_country_level) = paste0('colname', 1:ncol(rev_country_level))
###
rev_country_level = rev_country_level %>% mutate(colname6 = ifelse(colname19!='',paste0(colname19,': ',colname6),gsub('\\(','\n(',colname6)),
colname9 = ifelse(colname19!='',paste0(colname19,': ',colname9),gsub('\\(','\n(',colname9)),
colname12 = ifelse(colname19!='',paste0(colname19,': ',colname12),gsub('\\(','\n(',colname12)),
colname15 = ifelse(colname19!='',paste0(colname19,': ',colname15),gsub('\\(','\n(',colname15)),
colname18 = ifelse(colname19!='',paste0(colname19,': ',colname18),gsub('\\(','\n(',colname18)),
#######
colname5 = ifelse(colname19!='',paste0(colname19,': ',colname5),gsub('\\(','\n(',colname5)),
colname8 = ifelse(colname19!='',paste0(colname19,': ',colname8),gsub('\\(','\n(',colname8)),
colname11 = ifelse(colname19!='',paste0(colname19,': ',colname11),gsub('\\(','\n(',colname11)),
colname14 = ifelse(colname19!='',paste0(colname19,': ',colname14),gsub('\\(','\n(',colname14)),
colname17 = ifelse(colname19!='',paste0(colname19,': ',colname17),gsub('\\(','\n(',colname17)))
####country level estimates
pre_final_results = rev_country_level[-5,] %>% dplyr::select(colname5,colname6,colname8,colname9,colname11,colname12,colname14,colname15,colname17,colname18)%>%
rowwise %>% mutate(colname5 = paste0(colname5, collapse = '\n'),colname6 = paste0(colname6, collapse = '\n'),
colname8 = paste0(colname8, collapse = '\n'),colname9 = paste0(colname9, collapse = '\n'),
colname11 = paste0(colname11, collapse = '\n'),colname12 = paste0(colname12, collapse = '\n'),
colname14 = paste0(colname14, collapse = '\n'),colname15 = paste0(colname15, collapse = '\n'),
colname17 = paste0(colname17, collapse = '\n'),colname18 = paste0(colname18, collapse = '\n'))%>%
full_join(rev_country_level[5,]%>% dplyr::select(colname5,colname6,colname8,colname9,colname11,colname12,colname14,colname15,colname17,colname18))
###pulse 5-6; CPAP - 8,9; KMC - 11,12; Not hypothermia 14,15; Jaundice 17,18
final_results = with(pre_final_results,c(paste0(colname9[-5], collapse = '\n'),colname9[5],paste0(colname8[-5], collapse = '\n'),colname8[5],
paste0(colname12[-5], collapse = '\n'),colname12[5],paste0(colname11[-5], collapse = '\n'),colname11[5],
paste0(colname15[-5], collapse = '\n'),colname15[5],paste0(colname14[-5], collapse = '\n'),colname14[5],
paste0(colname18[-5], collapse = '\n'),colname18[5],paste0(colname17[-5], collapse = '\n'),colname17[5],
paste0(colname6[-5], collapse = '\n'),colname6[5], paste0(colname5[-5], collapse = '\n'),colname5[5]))%>% as.data.frame()
write.xlsx(final_results, file = 'final_results.xlsx')
